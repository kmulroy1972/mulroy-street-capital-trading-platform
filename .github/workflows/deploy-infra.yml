name: Deploy Infrastructure

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod
      action:
        description: 'Action to perform'
        required: true
        default: 'deploy'
        type: choice
        options:
          - deploy
          - destroy
  push:
    branches:
      - main
    paths:
      - 'infra/**'

permissions:
  id-token: write
  contents: read

env:
  AZURE_RESOURCE_GROUP: rg-alpaca-trader-${{ github.event.inputs.environment || 'dev' }}
  AZURE_LOCATION: eastus2

jobs:
  validate:
    name: Validate Bicep Templates
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Azure CLI
        uses: azure/CLI@v1
        with:
          azcliversion: latest

      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Validate Bicep template
        run: |
          cd infra
          az deployment group validate \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --template-file main.bicep \
            --parameters @parameters.json \
            --parameters environmentName=${{ github.event.inputs.environment || 'dev' }} \
            --parameters dbAdminPassword='DummyPassword123!' \
            --parameters alpacaApiKeyId='dummy-key' \
            --parameters alpacaSecretKey='dummy-secret' \
            --parameters jwtSecret='dummy-jwt-secret-32-characters-long'

  deploy:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest
    needs: validate
    if: ${{ github.event.inputs.action != 'destroy' }}
    environment: ${{ github.event.inputs.environment || 'dev' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Azure CLI
        uses: azure/CLI@v1
        with:
          azcliversion: latest

      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Create Resource Group
        run: |
          az group create \
            --name ${{ env.AZURE_RESOURCE_GROUP }} \
            --location ${{ env.AZURE_LOCATION }}

      - name: Deploy Infrastructure
        run: |
          cd infra
          DEPLOYMENT_NAME="alpaca-trader-$(date +%Y%m%d-%H%M%S)"
          
          DEPLOYMENT_OUTPUT=$(az deployment group create \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --template-file main.bicep \
            --parameters @parameters.json \
            --parameters environmentName=${{ github.event.inputs.environment || 'dev' }} \
            --parameters dbAdminPassword='${{ secrets.DB_ADMIN_PASSWORD }}' \
            --parameters alpacaApiKeyId='${{ secrets.ALPACA_API_KEY_ID }}' \
            --parameters alpacaSecretKey='${{ secrets.ALPACA_SECRET_KEY }}' \
            --parameters jwtSecret='${{ secrets.JWT_SECRET }}' \
            --name "$DEPLOYMENT_NAME" \
            --output json)
          
          echo "DEPLOYMENT_OUTPUT<<EOF" >> $GITHUB_ENV
          echo "$DEPLOYMENT_OUTPUT" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Display Deployment Summary
        run: |
          echo "## 🎉 Deployment Complete!" >> $GITHUB_STEP_SUMMARY
          echo "| Resource | Value |" >> $GITHUB_STEP_SUMMARY
          echo "|----------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| Container Registry | $(echo '${{ env.DEPLOYMENT_OUTPUT }}' | jq -r '.properties.outputs.containerRegistryLoginServer.value') |" >> $GITHUB_STEP_SUMMARY
          echo "| API URL | https://$(echo '${{ env.DEPLOYMENT_OUTPUT }}' | jq -r '.properties.outputs.apiAppUrl.value') |" >> $GITHUB_STEP_SUMMARY
          echo "| Web App URL | https://$(echo '${{ env.DEPLOYMENT_OUTPUT }}' | jq -r '.properties.outputs.staticWebAppUrl.value') |" >> $GITHUB_STEP_SUMMARY
          echo "| Key Vault | $(echo '${{ env.DEPLOYMENT_OUTPUT }}' | jq -r '.properties.outputs.keyVaultUri.value') |" >> $GITHUB_STEP_SUMMARY
          echo "| PostgreSQL Server | $(echo '${{ env.DEPLOYMENT_OUTPUT }}' | jq -r '.properties.outputs.postgresServerFqdn.value') |" >> $GITHUB_STEP_SUMMARY

  destroy:
    name: Destroy Infrastructure
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.action == 'destroy' }}
    environment: ${{ github.event.inputs.environment || 'dev' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Azure CLI
        uses: azure/CLI@v1
        with:
          azcliversion: latest

      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Destroy Infrastructure
        run: |
          echo "🗑️ Destroying resource group: ${{ env.AZURE_RESOURCE_GROUP }}"
          
          if az group show --name ${{ env.AZURE_RESOURCE_GROUP }} &> /dev/null; then
            az group delete \
              --name ${{ env.AZURE_RESOURCE_GROUP }} \
              --yes \
              --no-wait
            echo "✅ Resource group deletion initiated"
          else
            echo "ℹ️ Resource group does not exist"
          fi

      - name: Cleanup Summary
        run: |
          echo "## 🗑️ Infrastructure Cleanup" >> $GITHUB_STEP_SUMMARY
          echo "Resource group \`${{ env.AZURE_RESOURCE_GROUP }}\` deletion has been initiated." >> $GITHUB_STEP_SUMMARY
          echo "Cleanup will continue in the background and may take several minutes." >> $GITHUB_STEP_SUMMARY